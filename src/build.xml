<!-- Revisions 
   1.4.1 - Use 'try' on get properties.  5.1.0.70506 Deploy UI not creating property sheets for components
   1.5 - Align JSON generator with CreateObject; name -> processStepName
   1.5.1 - Fixed issues around subproject vs. subcomponents
   1.5.2 - Fix component property paths
   1.5.3 - Fix JSON generator around components being in applications
         - Add properties to JSON generator
   2.0 - Use native perl/JSON objects to generate JSON model.
   2.0.1 - Fixed tier maps
   2.0.2 - Further work on tier maps... working, I think.
   2.0.3 - Replaced applicationTierName
   2.0.4 - Include processType
   2.0.5 - Change plugin type to "System"
   2.0.6 - Remove EC-Artifact version number
   2.0.7 - AppTier view fix; add application name to getProcesses, getProcessStep, getActualParameters
   2.0.7 - Set minimum version to Commander 5.0
   2.0.8 - URL /flow
   2.1   - Rename Deploy and CDM to Flow
   2.1.1 - Made HTML safe (</opt/... caused problems) and added Full Inventory
   2.2   - Added EC- to the plugin name
	-->
<project name="plugin" default="package" basedir=".">
  <description>
    Build the DeployObjectViewer plugin
  </description>

  <!-- Plugin-specific properties -->
  <property name="pluginKey" value="EC-DeployObjectViewer" />
  <property name="pluginVersion" value="2.2" />
  <!-- The following requires and edit to buildTargets in the SDK v2.0 to 
		actually affect the plugin file name
  <property name="pluginFileName" value="${pluginKey}-${pluginVersion}" />
	-->
  
  <path id="extras">
    <!-- Add extra jars that need to be in the classpath for building the 
         plugin here. For example:

         <pathelement location="lib/smartgwt.jar"/>

         will grab the smartgwt jar from the lib directory of the plugin.

         Note that you must also add the jar to the "Referenced Libraries" 
         section of your plugin project for Eclipse to recognize the classes in
         the jar.

         Typically, you must also add an <inherits> element to the .gwt.xml 
         file for a component that uses classes from the third-party package.
    -->
  </path>
  <property name="gwt.path.extras" value="extras" />

  <import file="C:/Program Files/Electric Cloud/CommanderSDK/build/buildTargets.xml" />
  
	<target name="package.post"
	  description="Copies the jar file to to the top level">
	<copy overwrite="yes"
	  file="${out.dir}/${pluginKey}.jar"
	  toFile="../${pluginKey}-${pluginVersion}.jar"/>
	</target>
  
</project>
